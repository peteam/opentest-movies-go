// Package main contains a runnable Provider Pact test example.
package main

import (
	"fmt"
	"os"
	"path/filepath"
	"testing"

	"github.com/pact-foundation/pact-go/dsl"
	"github.com/pact-foundation/pact-go/types"
)

// var pactFilePath = "C:/Users/mm955y/Documents/Basha/pacts"
var dir, _ = os.Getwd()
var pactDir = fmt.Sprintf("%s/pacts", dir)

// Example Provider Pact: How to run me!
// 1. cd <pact-go>/examples
// 2. go test -v -run TestProvider
func TestProviderMov(t *testing.T) {

	// Create Pact connecting to local Daemon
	pact := &dsl.Pact{
		Consumer: "OT-Consumer",
		Provider: "OT-Provider",
	}
	fmt.Println("pactFilePath", pactDir)

	// f := func(next http.Handler) http.Handler {
	// 	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
	// 		r.Header.Add("Content-Type", "application/json")
	// 		next.ServeHTTP(w, r)
	// 	})
	// }
	// var Type string
	// Verify the Provider with local Pact Files
	pact.VerifyProvider(t, types.VerifyRequest{
		ProviderBaseURL: "http://localhost:8080",
		PactURLs:        []string{filepath.ToSlash(fmt.Sprintf("%s/ot-consumer-ot-provider.json", pactDir))},
		// RequestFilter:   f,
		// StateHandlers: types.StateHandlers{
		// 	"Movies exists": func() error {
		// 		fmt.Println("'Movies exist' state handler invoked")

		// 		// Type = "Movies"
		// 		return nil
		// 	},
		// },
	})
}
