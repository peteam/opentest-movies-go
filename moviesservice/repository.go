package moviesservice

import (
	"fmt"
)

var movieList []Movie

//Repository Type
type Repository struct{}

var movieID = 10

// AddMovie adds a Movie in the DB
func (r Repository) AddMovie(movie Movie) bool {
	movieID++
	movie.ID = movieID
	movieList = append(movieList, movie)

	fmt.Println("Added New Movie ID- ", movie.ID)

	return true
}

// GetMovies returns the list of Movies
func (r Repository) GetMovies() Movies {
	return movieList
}

// GetMovieByID returns a unique Movie
func (r Repository) GetMovieByID(id int) Movie {

	var result Movie

	fmt.Println("ID in GetMovieByID", id)

	for index, element := range movieList {
		fmt.Println("Index :", index, " Element :", element)
		fmt.Println(element.Title)
		if element.ID == id {
			result = element
		}

	}

	return result
}

// DeleteMovie deletes an Movie
func (r Repository) DeleteMovie(id int) string {
	for index, element := range movieList {
		fmt.Println("Index :", index, " Element :", element)
		fmt.Println(element.Title)
		if element.ID == id {
			movieList = append(movieList[:index], movieList[index+1:]...)

		}
	}
	fmt.Println("Deleted Movie ID - ", id)
	return "OK"
}

// UpdateMovie updates a movie in the DB
func (r Repository) UpdateMovie(movie Movie) bool {
	var itemFound bool
	id := movie.ID
	for index, element := range movieList {
		fmt.Println("Index :", index, " Element :", element)
		fmt.Println(element.Title)
		if element.ID == id {
			itemFound = true
			movieList[index] = movie
		}
	}

	if itemFound == true {
		fmt.Println("Updated Movie ID - ", movie.ID)
		return true
	}

	return false

}
