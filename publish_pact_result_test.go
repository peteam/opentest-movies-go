// Package main contains a runnable Provider Pact test example.
package main

import (
	"fmt"
	"os"
	"testing"

	"github.com/pact-foundation/pact-go/dsl"
	"github.com/pact-foundation/pact-go/types"
)

var curDir, _ = os.Getwd()
var pactDirectory = fmt.Sprintf("%s/pacts", curDir)

// Example Provider Pact: How to run me!
// 1. cd <pact-go>/examples
// 2. go test -v -run TestProvider
func TestPublishResult(t *testing.T) {
	// Verify the Provider - Latest Published Pacts for any known consumers
	pact := createPact()
	_, err := pact.VerifyProvider(t, types.VerifyRequest{
		// ProviderBaseURL:            fmt.Sprintf("http://127.0.0.1:%d", port),
		ProviderBaseURL: fmt.Sprintf("http://opentest-movies-go.peteam-staging.opentest.run"),

		BrokerURL: "http://pact.opentest.run",
		// BrokerUsername:             os.Getenv("PACT_BROKER_USERNAME"),
		// BrokerPassword:             os.Getenv("PACT_BROKER_PASSWORD"),
		PublishVerificationResults: true,
		ProviderVersion:            "2.0.0",
	})

	if err != nil {
		t.Fatal(err)
	}
}

// Setup the Pact client.
func createPact() dsl.Pact {
	return dsl.Pact{
		Consumer: "OT-Consumer",
		Provider: "OT-Provider",
		// LogDir:   logDir,
		PactDir:                  pactDirectory,
		DisableToolValidityCheck: true,
	}
}
